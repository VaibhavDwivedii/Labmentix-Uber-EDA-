{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"private_outputs":true,"provenance":[{"file_id":"1lZc_gqQ4RiRxLKQD7Mf3hojDBrLqJwWm","timestamp":1749990263909}],"collapsed_sections":["gIfDvo9L0UH2"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":[],"metadata":{"id":"I1apcow5dxii"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Project Name**    -\n","\n"],"metadata":{"id":"vncDsAP0Gaoa"}},{"cell_type":"markdown","source":["##### **Project Type**    - EDA\n","##### **Contribution**    - Individual\n","##### **Team Member 1 -**  Vaibhav Dwivedi\n","\n","\n","\n"],"metadata":{"id":"beRrZCGUAJYm"}},{"cell_type":"markdown","source":["# **Project Summary -**"],"metadata":{"id":"FJNUwmbgGyua"}},{"cell_type":"markdown","source":["Overview:\n","\n","This project presents a comprehensive diagnostic analysis of Uber’s ride request data with the objective of identifying service gaps, understanding demand-supply imbalances, and recommending operational improvements. Leveraging a dataset of 6,745 ride requests recorded across multiple days, the project utilizes SQL-based querying, Excel-based visualization, and proposes a follow-up Exploratory Data Analysis (EDA) using Python to develop an end-to-end analytical solution. The analysis decodes systemic inefficiencies in Uber’s trip fulfillment capabilities, especially across different hours and pickup zones such as the City and Airport.\n","\n","The data included structured fields such as request ID, pickup point, driver ID, trip status, and timestamps, along with engineered fields like request date, hour, and fulfillment flag. By dissecting the dataset along temporal and locational dimensions, the project uncovers critical performance breakdowns and supports strategic decision-making through insight generation and actionable metrics.\n","\n","Main Objective:\n","\n","The primary objective of this project is to analyze Uber’s ride fulfillment efficiency by:\n","\n","1. Measuring fulfillment rates and identifying time slots and locations with high service failures.\n","\n","2. Quantifying demand concentrations to reveal peak hour loads and service bottlenecks.\n","\n","3. Segmenting unfulfilled requests to understand the causes of failure (no availability, cancellations, etc.).\n","\n","4. Recommending targeted operational solutions to optimize resource allocation, shift planning, and customer experience.\n"],"metadata":{"id":"F6v_1wHtG2nS"}},{"cell_type":"markdown","source":["# **GitHub Link -**"],"metadata":{"id":"w6K7xa23Elo4"}},{"cell_type":"markdown","source":["https://github.com/VaibhavDwivedii"],"metadata":{"id":"h1o69JH3Eqqn"}},{"cell_type":"markdown","source":["# **Problem Statement**\n"],"metadata":{"id":"yQaldy8SH6Dl"}},{"cell_type":"markdown","source":["Uber faces a high rate of unfulfilled ride requests due to demand-supply imbalances, especially during peak hours and at high-traffic pickup points like the Airport. The absence of a structured analytical approach limits visibility into these gaps, preventing timely operational interventions. This project aims to analyze these inefficiencies using SQL, Excel, and EDA to support data-driven resource optimization."],"metadata":{"id":"DpeJGUA3kjGy"}},{"cell_type":"markdown","source":["#### **Define Your Business Objective?**"],"metadata":{"id":"PH-0ReGfmX4f"}},{"cell_type":"markdown","source":["The primary business objective of this project is to identify, quantify, and analyze demand-supply gaps in Uber’s ride request operations using SQL, Excel, and EDA. The goal is to uncover patterns in unfulfilled requests across time and location, evaluate peak-hour inefficiencies, and provide actionable, data-driven recommendations to improve trip fulfillment rates, optimize driver allocation, and enhance overall service efficiency."],"metadata":{"id":"PhDvGCAqmjP1"}},{"cell_type":"markdown","source":["# **General Guidelines** : -  "],"metadata":{"id":"mDgbUHAGgjLW"}},{"cell_type":"markdown","source":["1.   Well-structured, formatted, and commented code is required.\n","2.   Exception Handling, Production Grade Code & Deployment Ready Code will be a plus. Those students will be awarded some additional credits.\n","     \n","     The additional credits will have advantages over other students during Star Student selection.\n","       \n","             [ Note: - Deployment Ready Code is defined as, the whole .ipynb notebook should be executable in one go\n","                       without a single error logged. ]\n","\n","3.   Each and every logic should have proper comments.\n","4. You may add as many number of charts you want. Make Sure for each and every chart the following format should be answered.\n","        \n","\n","```\n","# Chart visualization code\n","```\n","            \n","\n","*   Why did you pick the specific chart?\n","*   What is/are the insight(s) found from the chart?\n","* Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason.\n","\n","5. You have to create at least 20 logical & meaningful charts having important insights.\n","\n","\n","[ Hints : - Do the Vizualization in  a structured way while following \"UBM\" Rule.\n","\n","U - Univariate Analysis,\n","\n","B - Bivariate Analysis (Numerical - Categorical, Numerical - Numerical, Categorical - Categorical)\n","\n","M - Multivariate Analysis\n"," ]\n","\n","\n","\n"],"metadata":{"id":"ZrxVaUj-hHfC"}},{"cell_type":"markdown","source":["# ***Let's Begin !***"],"metadata":{"id":"O_i_v8NEhb9l"}},{"cell_type":"markdown","source":["## ***1. Know Your Data***"],"metadata":{"id":"HhfV-JJviCcP"}},{"cell_type":"markdown","source":["### Import Libraries"],"metadata":{"id":"Y3lxredqlCYt"}},{"cell_type":"code","source":["# For data manipulation and handling\n","import pandas as pd\n","import numpy as np\n","\n","    # For text processing\n","import re\n","import string\n","from wordcloud import WordCloud, STOPWORDS\n","\n","\n","    # For encoding and preprocessing\n","from sklearn.preprocessing import StandardScaler, LabelEncoder, MultiLabelBinarizer\n","\n","    # For clustering\n","from sklearn.cluster import KMeans, DBSCAN\n","from sklearn.metrics import silhouette_score\n","from scipy.cluster.hierarchy import dendrogram, linkage\n","from sklearn.decomposition import PCA\n","from sklearn.manifold import TSNE\n","\n","    # For visualization\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import plotly.express as px\n","import plotly.graph_objects as go\n","print(\"All libraries imported successfully.\")"],"metadata":{"id":"M8Vqi-pPk-HR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Dataset Loading"],"metadata":{"id":"3RnN4peoiCZX"}},{"cell_type":"code","source":["# Load Dataset\n","from google.colab import files\n","uploaded = files.upload()\n","df = pd.read_csv(\"uber_data.csv\")\n","df.head()"],"metadata":{"id":"4CkvbW_SlZ_R"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Dataset First View"],"metadata":{"id":"x71ZqKXriCWQ"}},{"cell_type":"code","source":["# Dataset First Look\n","df.head()\n"],"metadata":{"id":"LWNFOSvLl09H"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Dataset Rows & Columns count"],"metadata":{"id":"7hBIi_osiCS2"}},{"cell_type":"code","source":["# Dataset Rows & Columns count\n","rows, columns = df.shape\n","print(f\"The dataset contains {rows} rows and {columns} columns.\")"],"metadata":{"id":"Kllu7SJgmLij"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Dataset Information"],"metadata":{"id":"JlHwYmJAmNHm"}},{"cell_type":"code","source":["# Dataset Info\n","df.info()\n"],"metadata":{"id":"e9hRXRi6meOf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Duplicate Values"],"metadata":{"id":"35m5QtbWiB9F"}},{"cell_type":"code","source":["# Dataset Duplicate Value Count\n","duplicate_count = df.duplicated().sum()\n","print(f\"Number of duplicate rows in the dataset: {duplicate_count}\")"],"metadata":{"id":"1sLdpKYkmox0"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Missing Values/Null Values"],"metadata":{"id":"PoPl-ycgm1ru"}},{"cell_type":"code","source":["# Missing Values/Null Values Count\n","missing_values = df.isnull().sum()\n","print(\"Missing values in each column:\\n\")\n","print(missing_values)"],"metadata":{"id":"GgHWkxvamxVg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Visualizing the missing values\n","import missingno as msno\n","plt.figure(figsize=(10, 6))\n","missing = df.isnull().sum()\n","missing = missing[missing > 0].sort_values(ascending=False)\n","missing.plot(kind='bar', color='salmon')\n","plt.title(\"Missing Values per Column\", fontsize=14)\n","plt.xlabel(\"Columns\")\n","plt.ylabel(\"Number of Missing Values\")\n","plt.xticks(rotation=45)\n","plt.tight_layout()\n","plt.show()\n","plt.figure(figsize=(12, 6))\n","sns.heatmap(df.isnull(), cbar=False, cmap='viridis')\n","plt.title(\"Missing Data Heatmap\")\n","plt.xlabel(\"Columns\")\n","plt.ylabel(\"Row Index\")\n","plt.show()"],"metadata":{"id":"3q5wnI3om9sJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### What did you know about your dataset?"],"metadata":{"id":"H0kj-8xxnORC"}},{"cell_type":"markdown","source":["The Uber dataset comprises 6,745 ride-level records with attributes such as pickup point, driver ID, ride status, request and drop timestamps, and derived fields like request hour, trip duration, and fulfillment status. Initial EDA reveals significant missing values in columns like Drop_timestamp, Drop_Date, and Trip_Duration (approximately 3,900 records), which are expected for unfulfilled or cancelled trips. Additionally, Driver_id is missing in a substantial number of entries, indicating instances where no driver was assigned. These missing values are not data quality issues but operational reflections of unsuccessful ride requests. Overall, the dataset is well-structured, and the missingness itself offers meaningful segmentation for further analysis."],"metadata":{"id":"gfoNAAC-nUe_"}},{"cell_type":"markdown","source":["## ***2. Understanding Your Variables***"],"metadata":{"id":"nA9Y7ga8ng1Z"}},{"cell_type":"code","source":["# Dataset Columns\n","column=df.columns.tolist()\n","print(\"Column Names:\",column)"],"metadata":{"id":"j7xfkqrt5Ag5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Dataset Describe\n","df.describe(include='all').transpose()"],"metadata":{"id":"DnOaZdaE5Q5t"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Variables Description"],"metadata":{"id":"PBTbrJXOngz2"}},{"cell_type":"markdown","source":["The dataset consists of 6,745 rows and 11 columns, each representing details of individual Uber ride requests. The Request_id column contains unique identifiers for each ride. The Pickup_point column specifies the origin of the request, categorized as either \"City\" or \"Airport\". The Driver_id field indicates the assigned driver’s numeric ID or is marked as missing when no driver was allocated. The Status column records the outcome of each request—either \"Trip Completed\", \"Cancelled\", or \"No Cars Available\". Request_timestamp captures the exact time and date when the request was initiated, while Drop_timestamp indicates the ride’s completion time and may be blank for unfulfilled rides. Derived fields include Request_Date and Request_Hour, which extract the date and hour from the timestamp to facilitate time-based analysis. Trip_Duration reflects the total time of completed rides in minutes and is unavailable for trips that were not completed. The Drop_Date column indicates the date on which the ride ended, mirroring the drop timestamp, and may be null for incomplete trips. The Fulfillment_Status field classifies each request as either \"Fulfilled\" or \"Unfulfilled\", based on whether a trip was completed. Together, these variables enable a comprehensive analysis of Uber’s demand-supply dynamics across time, location, and service outcomes."],"metadata":{"id":"aJV4KIxSnxay"}},{"cell_type":"markdown","source":["### Check Unique Values for each variable."],"metadata":{"id":"u3PMJOP6ngxN"}},{"cell_type":"code","source":["# Check Unique Values for each variable\n","unique_values = df.nunique().sort_values(ascending=False)\n","\n","# Display the result\n","print(\"Unique values in each column:\\n\")\n","print(unique_values)"],"metadata":{"id":"zms12Yq5n-jE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["unique_counts = df.nunique().sort_values()\n","\n","# Setting plot style\n","plt.figure(figsize=(10, 6))\n","sns.barplot(x=unique_counts.values, y=unique_counts.index, palette='viridis')\n","\n","# Adding labels and title\n","plt.title(\"Unique Values per Column in Uber Dataset\", fontsize=14)\n","plt.xlabel(\"Number of Unique Values\")\n","plt.ylabel(\"Columns\")\n","plt.tight_layout()\n","plt.show()"],"metadata":{"id":"e4qG4UStGGEB"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## 3. ***Data Wrangling***"],"metadata":{"id":"dauF4eBmngu3"}},{"cell_type":"markdown","source":["### Data Wrangling Code"],"metadata":{"id":"bKJF3rekwFvQ"}},{"cell_type":"code","source":["# Write your code to make your dataset analysis ready.\n","df.drop_duplicates(inplace=True)"],"metadata":{"id":"wk-9a2fpoLcV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### What all manipulations have you done and insights you found?"],"metadata":{"id":"MSa1f5Uengrz"}},{"cell_type":"markdown","source":["Answer Here.During the data wrangling phase, the majority of preprocessing for the Uber dataset was conducted in Excel before importing into the analysis environment. Key cleaning steps included removing any irrelevant columns (such as redundant date fields), standardizing timestamp formats, and engineering new variables to support deeper analysis. Specifically, Request_timestamp and Drop_timestamp were split into Request_Date and Request_Hour to enable time-series evaluations. A new column, Trip_Duration, was calculated for completed rides, and a Fulfillment_Status field was created to classify each request as either \"Fulfilled\" or \"Unfulfilled\" based on its outcome. Missing values in columns such as Drop_timestamp, Trip_Duration, and Driver_id were retained intentionally, as they represent meaningful operational gaps—such as cancelled rides or lack of driver allocation—rather than data quality issues. Column names were also formatted in a consistent, analysis-friendly structure with underscores and clear labels. As a result of this structured Excel-driven approach, no major data transformations were required during the exploratory data analysis phase in Google Colab.\n","\n","From the cleaned dataset, several operational insights emerged. Only 41.96% of total ride requests were fulfilled, highlighting a significant demand-supply gap. The unfulfilled rate was slightly higher at the Airport (59.02%) compared to the City (57.11%). Demand peaked sharply between 17:00 and 22:00, yet this time window also exhibited the lowest fulfillment rates—dropping to as low as 31.63%. The fulfillment rate remained consistently low across the five-day period analyzed, indicating persistent inefficiencies in real-time driver allocation and shift planning. These findings underscore the need for demand forecasting, geo-specific driver reallocation, and time-based surge incentives to optimize service levels and minimize lost ride opportunities.\n","\n","\n","\n","\n","\n","\n","\n","\n","\n"],"metadata":{"id":"LbyXE7I1olp8"}},{"cell_type":"markdown","source":["## ***4. Data Vizualization, Storytelling & Experimenting with charts : Understand the relationships between variables***"],"metadata":{"id":"GF8Ens_Soomf"}},{"cell_type":"markdown","source":["#### Chart - 1"],"metadata":{"id":"0wOQAZs5pc--"}},{"cell_type":"code","source":["\n","import plotly.graph_objects as go\n","\n","# Prepare values\n","labels = ['Fulfilled', 'Unfulfilled']\n","fulfilled = df['Fulfillment_Status'].value_counts().get('Fulfilled', 0)\n","unfulfilled = df['Fulfillment_Status'].value_counts().get('Unfulfilled', 0)\n","colors = ['#008000', '#db0000']  # Green for Fulfilled, Red for Unfulfilled\n","fig = go.Figure(data=[go.Pie(\n","    labels=labels,\n","    values=[fulfilled, unfulfilled],\n","    hole=0.6,\n","    marker=dict(colors=colors)\n",")])\n","\n","# Layout customization\n","fig.update_layout(\n","    title_text=\"Ride Fulfillment Status on Uber\",\n","    title_x=0.5,\n","    legend=dict(x=0.9),\n","    height=500,\n","    width=500,\n","    annotations=[dict(text='Fulfillment', font_size=18, showarrow=False)]\n",")\n","\n","fig.show()\n","\n"],"metadata":{"id":"7v_ESjsspbW7"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"K5QZ13OEpz2H"}},{"cell_type":"markdown","source":["The donut chart was selected because it provides a clear and immediate visual representation of categorical proportions—in this case, the split between Fulfilled and Unfulfilled ride requests. Given the binary nature of the Fulfillment_Status variable, this chart is optimal for highlighting service performance at a glance. It is visually compact, easy to interpret, and ideal for communicating high-level operational metrics to both technical and non-technical stakeholders."],"metadata":{"id":"XESiWehPqBRc"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"lQ7QKXXCp7Bj"}},{"cell_type":"markdown","source":["The chart reveals that out of 6,745 total ride requests, only 2,831 were fulfilled while 3,914 were unfulfilled. This means approximately 58% of all ride requests were not successfully completed, pointing to a severe operational shortfall. The fulfillment rate stands at just 42%, which indicates a significant gap between demand and available supply—either due to driver shortages, misalignment of driver location and timing, or other systemic issues in fleet deployment.\n","\n"],"metadata":{"id":"C_j1G7yiqdRP"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"448CDAPjqfQr"}},{"cell_type":"markdown","source":["Yes, the insight can drive a positive business impact by enabling Uber to make targeted operational improvements—such as reallocating drivers to high-demand zones during peak hours, optimizing shift structures, and implementing dynamic incentives. Addressing the low fulfillment rate will directly improve customer satisfaction, increase completed trip volume, and reduce revenue leakage due to missed opportunities.\n","\n","However, this insight also highlights a potential for negative growth if ignored. A high unfulfillment rate undermines user trust, increases app abandonment, and creates space for competitors to gain traction. Persistent service failures can erode brand reputation and customer retention, ultimately affecting long-term growth. Therefore, while the insight is valuable, it also serves as a strategic warning that operational inefficiencies must be urgently addressed to prevent customer and revenue loss.\n","\n"],"metadata":{"id":"3cspy4FjqxJW"}},{"cell_type":"markdown","source":["#### Chart - 2"],"metadata":{"id":"KSlN3yHqYklG"}},{"cell_type":"code","source":["# Chart - 2 visualization code\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","\n","# Count the occurrences of each ride status\n","status_counts = df['Status'].value_counts().reset_index()\n","status_counts.columns = ['Status', 'Count']  # Rename columns for clarity\n","\n","# Set figure dimensions\n","fig, ax = plt.subplots(figsize=(8, 5))\n","sns.pointplot(x='Status', y='Count', data=status_counts, color='crimson')\n","plt.title('Analysis of Ride Request Statuses', fontsize=15, fontweight='bold')\n","plt.xlabel('Ride Status')\n","plt.ylabel('Number of Requests')\n","plt.tight_layout()\n","plt.show()\n","\n"],"metadata":{"id":"R4YgtaqtYklH"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"t6dVpIINYklI"}},{"cell_type":"markdown","source":["The point plot was chosen for its effectiveness in comparing categorical variables where the Y-axis represents count values. Unlike a bar chart, a point plot emphasizes the relative positioning of categories, making it easier to highlight differences in frequency across distinct ride outcomes—such as “Trip Completed,” “Cancelled,” and “No Cars Available.” It offers a clean, minimalistic way to visualize categorical imbalance, making it well-suited for operational insights and executive reporting."],"metadata":{"id":"5aaW0BYyYklI"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"ijmpgYnKYklI"}},{"cell_type":"markdown","source":["The chart reveals that a large number of ride requests were not successfully completed, with the combined count of “Cancelled” and “No Cars Available” significantly exceeding “Trip Completed.” This validates the earlier insight of a low fulfillment rate, but now breaks it down further by identifying the type of failure. A high number of \"No Cars Available\" indicates a supply-side problem, while a notable volume of cancellations points to behavioral or experience-driven factors (e.g., long wait times or price surges). This distinction is critical for diagnosing the root causes behind unfulfilled demand."],"metadata":{"id":"PSx9atu2YklI"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"-JiQyfWJYklI"}},{"cell_type":"markdown","source":["Yes, these insights can significantly contribute to a positive business impact. Understanding the breakdown between \"Cancelled\" and \"No Cars Available\" allows Uber to design targeted interventions—such as driver recruitment campaigns, dynamic pricing, or incentive-based re-engagement for frequent cancellers. This enables smarter supply planning and user experience improvements.\n","\n","Conversely, if ignored, these insights highlight risks of negative growth. Persistent availability failures and high cancellation rates degrade customer trust and app reliability perception, leading to user churn and brand erosion. Competitors with more reliable service fulfillment can exploit this gap, resulting in market share loss. Thus, while the chart reveals opportunities, it also underlines urgent operational vulnerabilities that must be addressed."],"metadata":{"id":"BcBbebzrYklV"}},{"cell_type":"markdown","source":["#### Chart - 3"],"metadata":{"id":"EM7whBJCYoAo"}},{"cell_type":"code","source":["# Chart - 3 visualization code\n","plt.figure(figsize=(12, 6))\n","sns.countplot(data=df, x='Status', hue='Pickup_point', order=df['Status'].value_counts().index)\n","plt.title('Ride Status by Pickup Point', fontsize=16, fontweight='bold')\n","plt.xlabel('Ride Status')\n","plt.ylabel('Number of Requests')\n","plt.xticks(rotation=0)\n","plt.legend(title='Pickup Point')\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"id":"t6GMdE67YoAp"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"fge-S5ZAYoAp"}},{"cell_type":"markdown","source":["The countplot was chosen because it effectively displays the frequency distribution of categorical data while also allowing for subgroup comparisons using a secondary categorical variable (hue). In this case, it helps visualize how different ride statuses (Trip Completed, Cancelled, No Cars Available) are distributed across the two key pickup points—City and Airport. This format is particularly useful for identifying location-based performance discrepancies and operational bottlenecks in a single visual."],"metadata":{"id":"5dBItgRVYoAp"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"85gYPyotYoAp"}},{"cell_type":"markdown","source":["The chart reveals that both City and Airport pickup points experience high volumes of unfulfilled ride requests, with “No Cars Available” being the dominant status in both cases. However, the Airport consistently shows a higher count of failed requests, particularly unavailability, indicating that supply issues are more acute there. The number of successfully completed trips is significantly lower at the Airport compared to the City, reinforcing the insight that the Airport is a persistent bottleneck in service delivery."],"metadata":{"id":"4jstXR6OYoAp"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"RoGjAbkUYoAp"}},{"cell_type":"markdown","source":["\n","\n","```\n","# This is formatted as code\n","```\n","Yes, the insights from this chart can directly enable positive business impact by helping Uber deploy location-specific interventions. For instance, the data suggests that more drivers need to be stationed or incentivized to remain at the Airport, particularly during high-demand hours. It also indicates the need for demand forecasting algorithms tailored to pickup zones, improving both customer experience and driver utilization.\n","\n","On the flip side, the insight also exposes a risk of negative growth if the Airport issue remains unaddressed. Continual unavailability of rides at such a high-traffic location can frustrate frequent travelers and business clients—Uber’s high-value user segment—leading to brand dissatisfaction, customer churn, and lost market share to competitors with more consistent coverage. Thus, while the chart offers a roadmap to operational improvement, it also flags an urgent vulnerability in service delivery."],"metadata":{"id":"zfJ8IqMcYoAp"}},{"cell_type":"markdown","source":["#### Chart - 4"],"metadata":{"id":"4Of9eVA-YrdM"}},{"cell_type":"code","source":["# Chart - 4 visualization code\n","# Get top 5 request dates by volume\n","top_dates = df['Request_Date'].value_counts().nlargest(5)\n","plt.figure(figsize=(8, 5))\n","sns.countplot(\n","    y='Request_Date',\n","    data=df[df['Request_Date'].isin(top_dates.index)],\n","    palette='Blues_d',\n","    order=top_dates.index)\n","plt.title('Top 5 Dates with Highest Ride Requests', fontsize=15, fontweight='bold')\n","plt.xlabel('Number of Requests')\n","plt.ylabel('Request Date')\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"id":"irlUoxc8YrdO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"iky9q4vBYrdO"}},{"cell_type":"markdown","source":["The horizontal countplot was chosen to highlight the top-performing dates by ride request volume in a compact and readable format. This chart is ideal for time-based categorical analysis when the number of distinct dates is relatively small. Displaying the top 5 dates focuses attention on peak-demand periods, which is essential for identifying operational stress points and benchmarking resource adequacy. The horizontal layout also improves label readability for date fields."],"metadata":{"id":"aJRCwT6DYrdO"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"F6T5p64dYrdO"}},{"cell_type":"markdown","source":["The chart reveals that certain dates experienced significantly higher request volumes than others. This suggests the presence of temporal demand spikes, possibly linked to external factors like weekday patterns, travel surges, holidays, or marketing campaigns. These high-demand dates likely contribute disproportionately to total unfulfilled requests if not matched with sufficient driver supply. Recognizing these patterns helps establish predictable demand windows, which are critical for operational planning."],"metadata":{"id":"Xx8WAJvtYrdO"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"y-Ehk30pYrdP"}},{"cell_type":"markdown","source":["Yes, the insights derived from this chart can create a positive business impact by enabling date-specific forecasting and pre-emptive driver deployment. Uber can strategically plan staffing, shift rotations, and pricing incentives around these peak days to optimize fulfillment rates and enhance rider experience. This can directly improve utilization, reduce cancellations, and maximize revenue during high-traffic periods.\n","\n","On the contrary, if these high-demand dates are not adequately anticipated, they could result in repeated service failures, leading to negative customer sentiment and app abandonment. Unattended demand peaks can also increase strain on customer support and erode rider loyalty, particularly if the issues recur. Therefore, while the chart highlights opportunities, it also underlines the operational risks of failing to act on historical demand trends."],"metadata":{"id":"jLNxxz7MYrdP"}},{"cell_type":"markdown","source":["#### Chart - 5"],"metadata":{"id":"bamQiAODYuh1"}},{"cell_type":"code","source":["# Chart - 5 visualization code\n","# Step 1: Group by hour and fulfillment status\n","hourly_status_counts = df.groupby(['Request_Hour', 'Fulfillment_Status']).size().reset_index(name='Count')\n","\n","# Step 2: Identify top 10 hours by total request volume\n","top_hours = df['Request_Hour'].value_counts().nlargest(10).index\n","filtered_df = hourly_status_counts[hourly_status_counts['Request_Hour'].isin(top_hours)]\n","\n","# Step 3: Sort by hour to maintain chronological order\n","filtered_df['Request_Hour'] = filtered_df['Request_Hour'].astype(int)\n","filtered_df = filtered_df.sort_values(by='Request_Hour')\n","plt.figure(figsize=(12, 6))\n","sns.barplot(data=filtered_df, x='Request_Hour', y='Count', hue='Fulfillment_Status', palette='Set2')\n","plt.title(\"🔍 Top 10 Busiest Hours by Fulfillment Status\", fontsize=14)\n","plt.xlabel(\"Hour of Day (24-Hour Format)\")\n","plt.ylabel(\"Number of Requests\")\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"id":"TIJwrbroYuh3"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"QHF8YVU7Yuh3"}},{"cell_type":"markdown","source":["The grouped bar chart was selected because it is highly effective for comparing multiple categories—here, Fulfilled vs Unfulfilled requests—across a discrete numerical variable such as Request Hour. This chart not only visualizes the volume of activity per hour but also enables a direct comparison of service performance within each high-demand period. By focusing on the top 10 busiest hours, the visualization remains focused and operationally relevant, providing clear insights into when service gaps are most severe."],"metadata":{"id":"dcxuIMRPYuh3"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"GwzvFGzlYuh3"}},{"cell_type":"markdown","source":["The chart reveals that peak demand occurs consistently during early morning and evening hours, especially between 5 PM and 9 PM, but these hours also exhibit the highest volume of unfulfilled requests. While ride requests spike, the fulfillment rate drops drastically, suggesting a misalignment between demand and supply during critical service windows. In contrast, during off-peak hours, although the request volume is lower, the fulfillment ratio is relatively better. This points to a clear capacity and shift planning issue that disproportionately impacts user experience during high-traffic times.\n","\n"],"metadata":{"id":"uyqkiB8YYuh3"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"qYpmQ266Yuh3"}},{"cell_type":"markdown","source":["Yes, these insights can directly enable a positive business impact by helping Uber optimize driver deployment and dynamic pricing strategies during peak hours. Identifying specific hours where demand consistently outpaces supply allows for proactive workforce management, improved SLAs, and better customer retention.\n","\n","However, the same insight also uncovers a risk of negative growth if left unaddressed. Continued service failures during the most in-demand hours—when user expectations are highest—can lead to reduced trust, lost revenue, and increased churn, especially among time-sensitive or high-value customers. This operational inefficiency, if not corrected, could be exploited by competitors offering more reliable peak-hour service."],"metadata":{"id":"_WtzZ_hCYuh4"}},{"cell_type":"markdown","source":["#### Chart - 6"],"metadata":{"id":"OH-pJp9IphqM"}},{"cell_type":"code","source":["# Chart - 6 visualization code\n","# Step 1: Create a crosstab of Pickup Point vs Fulfillment Status\n","pickup_status = pd.crosstab(df['Pickup_point'], df['Fulfillment_Status'])\n","\n","\n","pickup_status.plot(kind='bar', stacked=True, figsize=(10, 6), color=['#2ca02c', '#d62728'])\n","plt.title('Fulfillment Status by Pickup Point', fontsize=14, fontweight='bold')\n","plt.xlabel('Pickup Point')\n","plt.ylabel('Number of Requests')\n","plt.xticks(rotation=0)\n","plt.legend(title='Fulfillment Status')\n","plt.tight_layout()\n","plt.show()\n","\n","\n","\n"],"metadata":{"id":"kuRf4wtuphqN"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"bbFf2-_FphqN"}},{"cell_type":"markdown","source":["The stacked bar chart was chosen because it clearly compares two categorical dimensions—Pickup Point (Airport vs City) and Fulfillment Status (Fulfilled vs Unfulfilled)—in a single, compact visual. Unlike separate bar charts or pie charts, the stacked format allows stakeholders to quickly assess both total request volume and the share of completed vs missed rides for each location. This makes it an ideal chart for evaluating operational effectiveness by region."],"metadata":{"id":"loh7H2nzphqN"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"_ouA3fa0phqN"}},{"cell_type":"markdown","source":["The chart reveals that both Airport and City have high volumes of unfulfilled requests, but the Airport consistently shows a lower fulfillment rate despite comparable or even fewer requests than the City. This suggests a systemic driver shortage or operational inefficiency specifically tied to the Airport location. In contrast, the City exhibits slightly better fulfillment performance, implying more balanced supply-demand alignment. This imbalance at the Airport likely contributes heavily to the overall supply-demand gap."],"metadata":{"id":"VECbqPI7phqN"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"Seke61FWphqN"}},{"cell_type":"markdown","source":["Yes, this analysis offers strong potential for positive business impact by pinpointing location-specific service gaps. Uber can use this data to reallocate driver availability, deploy surge pricing more strategically, or introduce Airport-specific driver incentives. These actions can increase trip completion rates and enhance customer satisfaction at high-demand locations.\n","\n","However, if left unresolved, the insight highlights a pathway to negative growth. Persistent failures at the Airport—often a critical touchpoint for business travelers and time-sensitive users—can lead to trust erosion, app uninstalls, and loss of high-value customers. Additionally, poor performance at such a central node damages brand reliability and opens the door for competitors offering stronger Airport coverage"],"metadata":{"id":"DW4_bGpfphqN"}},{"cell_type":"markdown","source":["#### Chart - 7"],"metadata":{"id":"PIIx-8_IphqN"}},{"cell_type":"code","source":["# Chart - 7 visualization code\n","# Step 1: Convert request date to datetime\n","df['Request_Date'] = pd.to_datetime(df['Request_Date'], format='%d-%m-%Y', errors='coerce')\n","\n","# Step 2: Group by date and fulfillment status\n","daily_trends = df.groupby(['Request_Date', 'Fulfillment_Status']).size().unstack(fill_value=0)\n","\n","# Step 3: Plot area chart\n","daily_trends.plot(kind='area', stacked=True, figsize=(12, 6), colormap='Set2')\n","plt.title('📈 Daily Request Trends by Fulfillment Status', fontsize=14)\n","plt.xlabel('Date')\n","plt.ylabel('Number of Requests')\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"id":"lqAIGUfyphqO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"t27r6nlMphqO"}},{"cell_type":"markdown","source":["The stacked area chart was selected because it effectively visualizes time-series trends across categories, in this case, Fulfilled vs Unfulfilled ride requests over multiple days. Unlike line charts, area charts not only highlight changes over time but also emphasize volume contribution from each category. This makes it ideal for understanding how service fulfillment fluctuates with daily demand and whether operational performance improved, worsened, or remained consistent over time."],"metadata":{"id":"iv6ro40sphqO"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"r2jJGEOYphqO"}},{"cell_type":"markdown","source":["The chart reveals that ride demand is relatively stable over the observed date range, but unfulfilled requests consistently surpass fulfilled ones, indicating a persistent supply-demand imbalance. There may be slight variations in performance across specific dates (e.g., a temporary spike in completions or a drop in failures), but the structural issue of under-fulfillment is continuous rather than episodic. This suggests that the supply-side inefficiencies are not limited to occasional surges but are a recurring operational weakness.\n","\n"],"metadata":{"id":"Po6ZPi4hphqO"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"b0JNsNcRphqO"}},{"cell_type":"markdown","source":["Yes, the insights offer clear pathways for positive business impact by helping Uber develop date-based forecasting and planning models. With this temporal clarity, operations teams can preemptively manage driver availability, optimize shift patterns, and launch demand-balancing interventions on historically underperforming days. It also enables leadership to evaluate the impact of past campaigns or changes in driver incentives.\n","\n","However, the chart also reveals a negative growth risk: the consistently high volume of unfulfilled requests highlights an unresolved structural issue. If this pattern continues unchecked, it could result in long-term user attrition, poor app ratings, and reduced customer lifetime value. The lack of improvement over time may also signal internal inertia or ineffective intervention strategies, necessitating urgent attention."],"metadata":{"id":"xvSq8iUTphqO"}},{"cell_type":"markdown","source":["#### Chart - 8"],"metadata":{"id":"BZR9WyysphqO"}},{"cell_type":"code","source":["# Chart - 8 visualization code\n","# Step 1: Filter unfulfilled requests only\n","unfulfilled_df = df[df['Fulfillment_Status'] == 'Unfulfilled']\n","\n","# Step 2: Group by Pickup Point and Hour\n","heatmap_data = unfulfilled_df.groupby(['Pickup_point', 'Request_Hour']).size().unstack(fill_value=0)\n","\n","# Step 3: Plot heatmap\n","plt.figure(figsize=(12, 6))\n","sns.heatmap(heatmap_data, cmap='YlOrRd', annot=True, fmt='d', linewidths=0.5)\n","plt.title('Heatmap of Unfulfilled Requests by Hour and Pickup Point', fontsize=14)\n","plt.xlabel('Hour of Day')\n","plt.ylabel('Pickup Point')\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"id":"TdPTWpAVphqO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"jj7wYXLtphqO"}},{"cell_type":"markdown","source":["The heatmap was selected because it effectively captures two critical dimensions simultaneously—pickup location and time of day—while mapping the intensity of unfulfilled requests through color gradients. Unlike line or bar charts, a heatmap reveals high-density failure zones in a grid format, making it the most intuitive visual to detect when and where the demand-supply gap is most critical. It provides actionable insights at a glance for time-sensitive operational decision-making.\n","\n"],"metadata":{"id":"Ob8u6rCTphqO"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"eZrbJ2SmphqO"}},{"cell_type":"markdown","source":["The heatmap reveals distinct hotspots of unfulfilled demand concentrated in evening hours (especially 17:00–21:00) and primarily at the Airport pickup point. This indicates that Uber is consistently unable to meet demand during peak evening traffic at a high-stakes location, likely due to driver shortages, increased traffic congestion, or ineffective surge pricing. Conversely, some hours (late night and midday) show relatively lighter unfulfilled volumes, suggesting balanced or excess supply in those periods."],"metadata":{"id":"mZtgC_hjphqO"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"rFu4xreNphqO"}},{"cell_type":"markdown","source":["Yes, these insights offer direct pathways to operational improvement. Uber can allocate more drivers, offer time-bound incentives, or recalibrate pricing algorithms in the identified peak hours and zones. This would lead to higher fulfillment rates, improved customer satisfaction, and better utilization of driver time, driving overall platform efficiency and revenue.\n","\n","However, the same insight highlights a negative growth risk if left unaddressed. Repeated failure to meet demand in the critical Airport zone during evening peak can result in customer frustration, increased churn, and reputational damage, especially among high-value users like frequent travelers or professionals. Moreover, it opens a competitive gap that can be exploited by rivals offering more reliable service in those windows."],"metadata":{"id":"ey_0qi68phqO"}},{"cell_type":"markdown","source":["#### Chart - 9"],"metadata":{"id":"YJ55k-q6phqO"}},{"cell_type":"code","source":["# Chart - 9 visualization code\n","# Trip Status Counts\n","status_counts = df['Status'].value_counts()\n","\n","# Plot\n","plt.figure(figsize=(6, 6))\n","colors = ['#00cc99', '#ff6666', '#ffcc00']\n","plt.pie(status_counts, labels=status_counts.index, autopct='%1.1f%%', colors=colors, startangle=140)\n","plt.title(\"📊 Distribution of Ride Request Outcomes\", fontsize=14)\n","plt.axis('equal')\n","plt.tight_layout()\n","plt.show()\n"],"metadata":{"id":"B2aS4O1ophqO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"gCFgpxoyphqP"}},{"cell_type":"markdown","source":["The pie chart was selected to provide a high-level, intuitive visual breakdown of the proportion of different ride outcomes—namely, Trip Completed, Cancelled, and No Cars Available. It complements the previously used bar charts and area plots by offering a snapshot view of categorical proportions, ideal for executive summaries or operational dashboards."],"metadata":{"id":"TVxDimi2phqP"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"OVtJsKN_phqQ"}},{"cell_type":"markdown","source":["The chart reveals that only a minority of requests result in successful trip completions, while the rest are either cancelled by users or go unserviced due to no available cars. If \"No Cars Available\" forms the largest segment, it highlights a severe supply-side issue, while a high \"Cancelled\" share may suggest issues with driver reliability or user impatience.\n","\n"],"metadata":{"id":"ngGi97qjphqQ"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"lssrdh5qphqQ"}},{"cell_type":"markdown","source":["Yes, the insights offer an immediate route to targeted operational improvements. Knowing which failure mode dominates allows Uber to tailor its interventions—e.g., driver reallocation for ‘No Cars Available’, or driver penalization/incentivization for excessive ‘Cancelled’ rides.\n","\n","However, this chart also uncovers negative growth threats. A high proportion of unsuccessful requests reflects poor service quality, undermining customer trust and contributing to long-term attrition and negative app reviews. These risks must be mitigated through real-time driver dispatch and smarter predictive algorithms."],"metadata":{"id":"tBpY5ekJphqQ"}},{"cell_type":"markdown","source":["#### Chart - 10"],"metadata":{"id":"U2RJ9gkRphqQ"}},{"cell_type":"code","source":["# Chart - 10 visualization code\n","\n","# Step 1: Filter only unfulfilled requests\n","unfulfilled_df = df[df['Fulfillment_Status'] == 'Unfulfilled']\n","\n","# Step 2: Group by pickup point and hour\n","bubble_data = unfulfilled_df.groupby(['Pickup_point', 'Request_Hour']).size().reset_index(name='Unfulfilled_Requests')\n","\n","# Step 3: Create Bubble Chart\n","fig = px.scatter(\n","    bubble_data,\n","    x='Request_Hour',\n","    y='Pickup_point',\n","    size='Unfulfilled_Requests',\n","    color='Pickup_point',\n","    size_max=40,\n","    title='Unfulfilled Ride Requests by Pickup Point and Hour',)\n","\n","fig.update_layout(\n","    xaxis_title='Hour of Day',\n","    yaxis_title='Pickup Point',\n","    legend_title='Pickup Point',\n","    height=500,\n","    width=900)\n","\n","fig.show()\n","\n"],"metadata":{"id":"GM7a4YP4phqQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"1M8mcRywphqQ"}},{"cell_type":"markdown","source":["The bubble chart was selected because it effectively visualizes three variables simultaneously: time (Request_Hour), location (Pickup_point), and volume (Unfulfilled_Requests). This multi-dimensional approach provides a compact yet powerful way to pinpoint critical spatiotemporal gaps in service delivery. Unlike bar or line charts, the bubble chart highlights not just trends, but demand severity through variable bubble size—making it ideal for decision-makers to prioritize high-pressure zones."],"metadata":{"id":"8agQvks0phqQ"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"tgIPom80phqQ"}},{"cell_type":"markdown","source":["The chart reveals clear hotspot clusters—particularly large unfulfilled request volumes from the Airport during late evening hours (17:00 to 21:00). This indicates not only a high frequency of ride requests but also a consistently inadequate supply of drivers during those critical hours. Comparatively, the City shows a broader distribution of unfulfilled requests throughout the day, but with smaller peaks, indicating a more stable but still underperforming operation.\n","\n"],"metadata":{"id":"Qp13pnNzphqQ"}},{"cell_type":"markdown","source":["##### 3. Will the gained insights help creating a positive business impact?\n","Are there any insights that lead to negative growth? Justify with specific reason."],"metadata":{"id":"JMzcOPDDphqR"}},{"cell_type":"markdown","source":["Yes, the insights enable data-driven improvements such as optimized driver allocation and targeted incentives during high-failure hours, which can improve fulfillment rates and customer satisfaction. However, persistent gaps—especially at the Airport during peak hours—pose a serious risk of negative user experience, reduced retention, and long-term brand damage if not addressed promptly."],"metadata":{"id":"R4Ka1PC2phqR"}},{"cell_type":"markdown","source":["#### Chart - 11 - Correlation Heatmap"],"metadata":{"id":"NC_X3p0fY2L0"}},{"cell_type":"code","source":["# Correlation Heatmap visualization code\n","import pandas as pd\n","\n","# Confirming actual column names\n","print(df.columns)\n","\n","# Renaming columns to standardize\n","df.columns = df.columns.str.strip().str.replace(\" \", \"_\")\n","\n","# Converting timestamp column properly\n","df['Request_timestamp'] = pd.to_datetime(df['Request_timestamp'], errors='coerce')\n","\n","# Creating derived columns\n","df['Request_Hour'] = df['Request_timestamp'].dt.hour\n","df['Request_Day'] = df['Request_timestamp'].dt.dayofweek  # 0 = Monday\n","\n","# Fulfilled flag (binary)\n","df['Unfulfilled_Flag'] = df['Fulfillment_Status'].apply(lambda x: 1 if x == 'Unfulfilled' else 0)\n","\n","# Confirming creation\n","print(df[['Request_Hour', 'Request_Day', 'Unfulfilled_Flag']].head())\n","\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","corr_df = df[['Request_Hour', 'Request_Day', 'Unfulfilled_Flag']].dropna()\n","\n","plt.figure(figsize=(6, 4))\n","sns.heatmap(corr_df.corr(), annot=True, cmap='coolwarm', fmt=\".2f\")\n","plt.title(\"Correlation Heatmap: Hour, Day, and Unfulfilled Flag\")\n","plt.tight_layout()\n","plt.show()\n","\n","\n"],"metadata":{"id":"xyC9zolEZNRQ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"UV0SzAkaZNRQ"}},{"cell_type":"markdown","source":["The correlation heatmap was chosen to statistically evaluate the strength of relationships between numerical variables—specifically, request hour, day of week, and fulfillment failure. This chart provides a concise, matrix-style view of how these time-based variables correlate with service performance (unfulfilled trips)."],"metadata":{"id":"DVPuT8LYZNRQ"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"YPEH6qLeZNRQ"}},{"cell_type":"markdown","source":["The insights show that the correlation values between variables such as Request_Hour, Request_Day, and Unfulfilled_Flag are close to zero. This indicates no significant linear correlation between the timing of requests and the failure to fulfill them, suggesting that fulfillment issues might be influenced by other factors such as location or peak demand clusters, not captured linearly by time alone."],"metadata":{"id":"bfSqtnDqZNRR"}},{"cell_type":"markdown","source":["#### Chart - 12 - Pair Plot"],"metadata":{"id":"q29F0dvdveiT"}},{"cell_type":"code","source":["# Pair Plot visualization code\n","sns.pairplot(corr_df)\n","plt.suptitle('Pair Plot: Request Hour vs Day vs Unfulfilled Flag', fontsize=14, y=1.02)\n","plt.show()\n","\n"],"metadata":{"id":"o58-TEIhveiU"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##### 1. Why did you pick the specific chart?"],"metadata":{"id":"EXh0U9oCveiU"}},{"cell_type":"markdown","source":["The pair plot was selected to visually examine multidimensional relationships between request hour, day of week, and fulfillment status. Unlike a correlation matrix, the pair plot provides raw scatter and distribution insights, revealing potential clustering or non-linear associations."],"metadata":{"id":"eMmPjTByveiU"}},{"cell_type":"markdown","source":["##### 2. What is/are the insight(s) found from the chart?"],"metadata":{"id":"22aHeOlLveiV"}},{"cell_type":"markdown","source":["The plot highlights that unfulfilled requests are heavily concentrated in specific hours, and to some extent, on specific days—indicating time-windowed surges in demand. This behavior isn’t captured well by correlation coefficients but is clearly visible in the scatter structure and histograms, where request hour shows distinct spikes associated with higher failure rates."],"metadata":{"id":"uPQ8RGwHveiV"}},{"cell_type":"markdown","source":["## **5. Solution to Business Objective**"],"metadata":{"id":"JcMwzZxoAimU"}},{"cell_type":"markdown","source":["#### What do you suggest the client to achieve Business Objective ?\n","Explain Briefly."],"metadata":{"id":"8G2x9gOozGDZ"}},{"cell_type":"markdown","source":["To address the core business objective—minimizing Uber’s supply-demand mismatch and improving trip fulfillment rates—the following strategic actions are recommended:\n","\n","1. Dynamic Driver Allocation\n","Deploy drivers in a time-sensitive and location-prioritized manner. Peak-hour demand surges (especially during early morning airport runs and late evening city rides) should trigger automatic real-time driver redistribution using predictive algorithms.\n","\n","2. Demand Forecasting by Time and Zone\n","Leverage historical request patterns by hour and pickup point to build demand heatmaps. Machine learning models can forecast hourly trip volumes, allowing proactive scaling of fleet availability in critical windows.\n","\n","3. Incentivize Peak Hour Supply\n","Introduce dynamic incentive structures to motivate drivers to remain active during high-demand slots (e.g., 17:00–21:00) and at high-unfulfilled-rate pickup points (e.g., airport zone).\n","\n","4. Improve Cancellations Handling\n","Analyze cancellation reasons further and introduce features such as auto reallocation of nearest available driver or ETA transparency, which could reduce voluntary cancellations from both drivers and users.\n","\n","5. Integrate Real-Time Monitoring Dashboard\n","Build a live dashboard combining metrics like real-time request volume, fulfillment rate by pickup zone, and driver availability status, enabling operations teams to act on bottlenecks instantly.\n","\n","Periodic Geo-Temporal Optimization Reviews\n","Set up a cadence (weekly/monthly) to review supply-demand heatmaps and fulfillment KPIs to keep optimizing driver strategy and avoid seasonal mismatches.\n","\n","By implementing these recommendations, Uber can significantly reduce unfulfilled requests, enhance customer satisfaction, and improve overall fleet efficiency—translating into positive revenue impact and better operational scalability."],"metadata":{"id":"pASKb0qOza21"}},{"cell_type":"markdown","source":["# **Conclusion**"],"metadata":{"id":"gCX9965dhzqZ"}},{"cell_type":"markdown","source":["This exploratory data analysis of Uber's ride request data has unveiled critical operational inefficiencies, particularly concerning supply-demand gaps, fulfillment bottlenecks, and time-based service disparities. Through SQL-driven insights and Python-based visual analytics, it was identified that a significant portion of customer requests—especially from high-volume pickup points like the airport and during peak hours (17:00–22:00)—remain unfulfilled due to driver unavailability or cancellations.\n","\n","Despite a lack of strong linear correlations between time and fulfillment outcomes, visual exploration revealed distinct temporal clusters of high failure rates, emphasizing the need for targeted resource planning rather than static allocation. The analysis also confirmed that nearly 60% of requests go unfulfilled, highlighting an urgent need for data-informed operational restructuring.\n","\n","In summary, this EDA equips stakeholders with actionable intelligence to optimize driver deployment, enhance fulfillment efficiency, and streamline ride availability, thereby aligning operational strategy with real-world demand dynamics. These insights not only address the existing business challenge but also lay a foundation for predictive analytics, real-time monitoring, and continuous performance optimization."],"metadata":{"id":"Fjb1IsQkh3yE"}},{"cell_type":"markdown","source":["### ***Hurrah! You have successfully completed your EDA Capstone Project !!!***"],"metadata":{"id":"gIfDvo9L0UH2"}},{"cell_type":"code","source":[],"metadata":{"id":"dYX880etpL0x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"-6Vl263upPVI"},"execution_count":null,"outputs":[]}]}